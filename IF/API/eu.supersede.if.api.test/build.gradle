/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'yosu' at '5/3/16 2:34 PM' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()
        
        maven {
            url 'http://supersede.es.atos.net:10080/artifactory/plugins-release'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
 	}
 	
 	dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}


// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    maven {url "http://supersede.es.atos.net:10080/artifactory/libs-snapshot/"}
    maven {url "http://supersede.es.atos.net:10080/artifactory/libs-release/"}
}

// In this section you declare the dependencies for your production and test code
dependencies {
    testCompile 'junit:junit:4.12'
    compile(group: 'eu.supersede.if', name: 'eu.supersede.if.api', version: '0.3.0-SNAPSHOT', changing: true)
}

configurations.all {
	//Avoids conflict: SL4J Multiple bindings were found on the class path 
	exclude group: "org.slf4j", module: "slf4j-log4j12"
	// check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2'
}

// Test execution JVM properties
tasks.withType(Test){
	systemProperty 'is.admin.user', System.getProperty ('is.admin.user', 'admin@atos.supersede.eu')
	systemProperty 'is.admin.passwd', System.getProperty ('is.admin.passwd', 'rtgWCyrc')
	systemProperty 'supersede.if.properties', System.getProperty ('supersede.if.properties', 'if.properties')
}

// Test execution filter
test {
	filter {
		includeTestsMatching "*MailProxyTest"
		includeTestsMatching "*FEDataStoreProxyTest"
		includeTestsMatching "*IFAuthenticationManagerTest"
	}
}

allprojects {
    apply plugin: "com.jfrog.artifactory"
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'libs-snapshot-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
            
        }
    }
    resolve {
        repository {
            repoKey = 'supersede'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
            
        }
    }
}

